// SET UP
const fs = require('fs');
const centralData = require('../../../data/central');
const planificationFamilialeData = require('../../../data/csr/rapport/planificationFamiliale');

// ERROR
const { newError } = require('../../../util/error');

// JSON
const region = JSON.parse(
	fs.readFileSync(`${__dirname}/../../../static/json/region.json`)
);
const province = JSON.parse(
	fs.readFileSync(`${__dirname}/../../../static/json/province.json`)
);

// DATA REGION
async function dataRegion() {
	try {
		var data = {
				piluleNa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				piluleAa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				injectableNa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				injectableAa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				diuNa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				diuAa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				condomNa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				condomAa: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				referenceDiu: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
				referenceLt: {
					data: {
						1: 0,
						2: 0,
						3: 0,
						4: 0,
						5: 0,
						6: 0,
						7: 0,
						8: 0,
						9: 0,
						10: 0,
						11: 0,
						12: 0,
					},
				},
			},
			planificationFamiliale = await planificationFamilialeData.getPlanificationFamiliale();
		// ------------------------
		// region
		for (let i = 0; i < region.length; i++) {
			const regionElement = region[i];
			// planificationFamiliale
			for (let j = 0; j < planificationFamiliale.length; j++) {
				const planificationFamilialeElement = planificationFamiliale[j];
				if (regionElement.region  === planificationFamilialeElement.csr.region) {
					data.piluleNa.data[regionElement.codeRegion] += planificationFamilialeElement.pilule.na
					data.piluleAa.data[regionElement.codeRegion] += planificationFamilialeElement.pilule.aa
					data.injectableNa.data[regionElement.codeRegion] += planificationFamilialeElement.injectable.na
					data.injectableAa.data[regionElement.codeRegion] += planificationFamilialeElement.injectable.aa
					data.diuNa.data[regionElement.codeRegion] += planificationFamilialeElement.diu.na
					data.diuAa.data[regionElement.codeRegion] += planificationFamilialeElement.diu.aa
					data.condomNa.data[regionElement.codeRegion] += planificationFamilialeElement.condom.na
					data.condomAa.data[regionElement.codeRegion] += planificationFamilialeElement.condom.aa
					data.referenceDiu.data[regionElement.codeRegion] += planificationFamilialeElement.reference.diu
					data.referenceLt.data[regionElement.codeRegion] += planificationFamilialeElement.reference.lt
				}
			}
		}
		return data;
	} catch (error) {
		console.log(error);
		throw newError(500, "quelque chose s'est mal passÃ©");
	}
}

// DATA REGION
async function dataProvince() {
	try {
		var data = {
				piluleNa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				piluleAa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				injectableNa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				injectableAa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				diuNa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				diuAa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				condomNa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				condomAa: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				referenceDiu: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},
				referenceLt: {
					data: {
				1: 0,
				2: 0,
				3: 0,
				4: 0,
				5: 0,
				6: 0,
				7: 0,
				8: 0,
				9: 0,
				10: 0,
				11: 0,
				12: 0,
				13: 0,
				14: 0,
				15: 0,
				16: 0,
				17: 0,
				18: 0,
				19: 0,
				20: 0,
				21: 0,
				22: 0,
				23: 0,
				24: 0,
				25: 0,
				26: 0,
				27: 0,
				28: 0,
				29: 0,
				30: 0,
				31: 0,
				32: 0,
				33: 0,
				34: 0,
				35: 0,
				36: 0,
				37: 0,
				38: 0,
				39: 0,
				40: 0,
				41: 0,
				42: 0,
				43: 0,
				44: 0,
				45: 0,
				46: 0,
				47: 0,
				48: 0,
				49: 0,
				50: 0,
				51: 0,
				52: 0,
				53: 0,
				54: 0,
				55: 0,
				56: 0,
				57: 0,
				58: 0,
				59: 0,
				60: 0,
				61: 0,
				62: 0,
				63: 0,
				64: 0,
				65: 0,
				66: 0,
				67: 0,
				68: 0,
				69: 0,
				70: 0,
				71: 0,
				72: 0,
				73: 0,
				74: 0,
				75: 0,
					},
				},

			},
			planificationFamiliale = await planificationFamilialeData.getPlanificationFamiliale();
		// ------------------------
		// province
		for (let i = 0; i < province.length; i++) {
			const provinceElement = province[i];
			// planificationFamiliale
			for (let j = 0; j < planificationFamiliale.length; j++) {
				const planificationFamilialeElement = planificationFamiliale[j];
				if (provinceElement.province  === planificationFamilialeElement.csr.province) {
					data.piluleNa.data[provinceElement.codeProvince] += planificationFamilialeElement.pilule.na
					data.piluleAa.data[provinceElement.codeProvince] += planificationFamilialeElement.pilule.aa
					data.injectableNa.data[provinceElement.codeProvince] += planificationFamilialeElement.injectable.na
					data.injectableAa.data[provinceElement.codeProvince] += planificationFamilialeElement.injectable.aa
					data.diuNa.data[provinceElement.codeProvince] += planificationFamilialeElement.diu.na
					data.diuAa.data[provinceElement.codeProvince] += planificationFamilialeElement.diu.aa
					data.condomNa.data[provinceElement.codeProvince] += planificationFamilialeElement.condom.na
					data.condomAa.data[provinceElement.codeProvince] += planificationFamilialeElement.condom.aa
					data.referenceDiu.data[provinceElement.codeProvince] += planificationFamilialeElement.reference.diu
					data.referenceLt.data[provinceElement.codeProvince] += planificationFamilialeElement.reference.lt
				}
			}
		}
		return data;
	} catch (error) {
		console.log(error);
		throw newError(500, "quelque chose s'est mal passÃ©");
	}
}

// get the dashbord
async function planificationFamiliale(req, res, next) {
	try {
		// collect data
		var data = {},
			today = new Date();
		// get the document of the central
		data.document = await centralData.getDocument(req.params.id);
		// taux pdr visite
		data.carte = {
			region: await dataRegion(),
			province: await dataProvince(),
		};
		// render the page
		res.status(200).render('central/dashboard/planificationFamiliale', {
			title:
				'Tableau de bord | Planification familiale | ' +
				today.getFullYear(),
			url: req.originalUrl,
			data,
			region,
			province,
			page: 'prestation',
			listItem: 'planificationFamiliale',
		});
	} catch (error) {
		console.log(error);
		return next(newError(500, "quelque chose s'est mal passÃ©"));
	}
}

// output
module.exports = {
	planificationFamiliale,
};
